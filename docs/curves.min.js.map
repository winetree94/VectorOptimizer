{"version":3,"file":"curves.min.js","mappings":"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","sources":["webpack://Curves/webpack/universalModuleDefinition","webpack://Curves/./src/curves.sample/drawer.ts","webpack://Curves/./src/curves/cubic-bezier.ts","webpack://Curves/./src/curves/curve-fit-base.ts","webpack://Curves/./src/curves/curve-fit.ts","webpack://Curves/./src/curves/curve-preprocess.ts","webpack://Curves/./src/curves/vector.ts","webpack://Curves/webpack/bootstrap","webpack://Curves/./src/curves.sample/main.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Curves\"] = factory();\n\telse\n\t\troot[\"Curves\"] = factory();\n})(self, function() {\nreturn ","/* eslint-disable no-case-declarations */\r\nimport { CurveFit } from '../curves/curve-fit';\r\nimport { linearize, rdpReduce } from '../curves/curve-preprocess';\r\nimport { Vector } from '../curves/vector';\r\n\r\nfunction getRandomColor(): string {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport enum RenderMode {\r\n  ORIGINAL_POINTS = 'original-points',\r\n  ORIGINAL_LINES = 'original-lines',\r\n  PREPROCESSED = 'preprocessed',\r\n  CONTROL_POINTS = 'control-points',\r\n  REPARAMATERIZED = 'reparamaterized',\r\n  FINAL_CURVES = 'final-curves',\r\n}\r\n\r\nexport enum PreprocessMode {\r\n  NONE = 'none',\r\n  LINEARIZE = 'linearize',\r\n  RAMER_DOUGLAS_PEUCHER = 'ramer-douglas-peucher',\r\n}\r\n\r\nexport interface DrawerOptions {\r\n  renderMode: RenderMode;\r\n  preprocessMode: PreprocessMode;\r\n  linearizePointDistance: number;\r\n  rdpError: number;\r\n  curveFittingError: number;\r\n  colorize: boolean;\r\n}\r\n\r\nexport class Drawer {\r\n  private originPoints: Point[] = [];\r\n\r\n  private _options: DrawerOptions = {\r\n    preprocessMode: PreprocessMode.NONE,\r\n    renderMode: RenderMode.ORIGINAL_POINTS,\r\n    linearizePointDistance: 8,\r\n    rdpError: 1,\r\n    curveFittingError: 8,\r\n    colorize: true,\r\n  };\r\n\r\n  public get options(): DrawerOptions {\r\n    return this._options;\r\n  }\r\n\r\n  public set options(options: DrawerOptions) {\r\n    this._options = {\r\n      ...this._options,\r\n      ...options,\r\n    };\r\n    this.render();\r\n  }\r\n\r\n  public constructor(private readonly element: SVGSVGElement) {\r\n    element.addEventListener('pointerdown', this.onMouseDown.bind(this));\r\n    element.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n    element.addEventListener('touchstart', (e) => e.preventDefault());\r\n  }\r\n\r\n  private onMouseDown(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    this.clearOriginPoints();\r\n    this.clearView();\r\n\r\n    const startPoint = {\r\n      x: event.offsetX,\r\n      y: event.offsetY,\r\n    };\r\n    const $startCircle = this.createCircle(startPoint);\r\n    this.element.appendChild($startCircle);\r\n    this.originPoints.push(startPoint);\r\n\r\n    const onMouseMove = (event: MouseEvent) => {\r\n      const point = {\r\n        x: event.offsetX,\r\n        y: event.offsetY,\r\n      };\r\n      const $circle = this.createCircle(point);\r\n      this.element.appendChild($circle);\r\n      this.originPoints.push(point);\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n      this.element.removeEventListener('pointermove', onMouseMove);\r\n      this.element.removeEventListener('pointerup', onMouseUp);\r\n      this.element.removeEventListener('mousemove', onMouseMove);\r\n      this.element.removeEventListener('mouseup', onMouseUp);\r\n      this.render();\r\n    };\r\n\r\n    this.element.addEventListener('mousemove', onMouseMove);\r\n    this.element.addEventListener('mouseup', onMouseUp);\r\n    this.element.addEventListener('pointermove', onMouseMove);\r\n    this.element.addEventListener('pointerup', onMouseUp);\r\n  }\r\n\r\n  public createCircle(point: Point): SVGCircleElement {\r\n    const $circle = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'circle'\r\n    );\r\n    $circle.setAttribute('cx', point.x.toString());\r\n    $circle.setAttribute('cy', point.y.toString());\r\n    $circle.setAttribute('r', (1).toString());\r\n    $circle.setAttribute('fill', 'red');\r\n    return $circle;\r\n  }\r\n\r\n  public clearOriginPoints(): void {\r\n    this.originPoints.splice(0);\r\n  }\r\n\r\n  public clearView(): void {\r\n    this.element.innerHTML = '';\r\n  }\r\n\r\n  private transformToVector(): Vector[] {\r\n    return this.originPoints.map((point) => Vector.from(point));\r\n  }\r\n\r\n  private getPreprocessedVectors(): Vector[] {\r\n    switch (this.options.preprocessMode) {\r\n      case PreprocessMode.NONE:\r\n        return this.transformToVector();\r\n      case PreprocessMode.LINEARIZE:\r\n        return linearize(\r\n          this.transformToVector(),\r\n          this.options.linearizePointDistance\r\n        );\r\n      case PreprocessMode.RAMER_DOUGLAS_PEUCHER:\r\n        return rdpReduce(this.transformToVector(), this.options.rdpError);\r\n    }\r\n  }\r\n\r\n  private render(): void {\r\n    switch (this.options.renderMode) {\r\n      case RenderMode.ORIGINAL_POINTS:\r\n        this.clearView();\r\n        this.originPoints.forEach((point) => {\r\n          const $circle = this.createCircle(point);\r\n          this.element.appendChild($circle);\r\n        });\r\n        break;\r\n      case RenderMode.ORIGINAL_LINES:\r\n        this.clearView();\r\n        for (let i = 1; i < this.originPoints.length; i++) {\r\n          const previous = this.originPoints[i - 1];\r\n          const current = this.originPoints[i];\r\n          const $polyline = document.createElementNS(\r\n            'http://www.w3.org/2000/svg',\r\n            'polyline'\r\n          );\r\n          $polyline.setAttribute('fill', 'none');\r\n          $polyline.setAttribute(\r\n            'stroke',\r\n            this.options.colorize ? getRandomColor() : 'red'\r\n          );\r\n          $polyline.setAttribute(\r\n            'points',\r\n            `${previous.x} ${previous.y} ${current.x}, ${current.y}`\r\n          );\r\n          this.element.appendChild($polyline);\r\n        }\r\n        break;\r\n      case RenderMode.PREPROCESSED:\r\n        this.clearView();\r\n        this.getPreprocessedVectors().forEach((vector) => {\r\n          const $circle = this.createCircle(vector);\r\n          this.element.appendChild($circle);\r\n        });\r\n        break;\r\n      case RenderMode.FINAL_CURVES:\r\n        this.clearView();\r\n        const $path = document.createElementNS(\r\n          'http://www.w3.org/2000/svg',\r\n          'path'\r\n        );\r\n        $path.setAttribute('fill', 'none');\r\n        $path.setAttribute('stroke', 'red');\r\n\r\n        const curveFit = new CurveFit(this.getPreprocessedVectors());\r\n        curveFit.fit(this.options.curveFittingError).forEach((bezier) => {\r\n          const $path = document.createElementNS(\r\n            'http://www.w3.org/2000/svg',\r\n            'path'\r\n          );\r\n          $path.setAttribute('fill', 'none');\r\n          $path.setAttribute(\r\n            'stroke',\r\n            this.options.colorize ? getRandomColor() : 'red'\r\n          );\r\n          $path.setAttribute('stroke-width', `${2}px`);\r\n          $path.setAttribute(\r\n            'd',\r\n            `M ${bezier.p0.x} ${bezier.p0.y} C ${bezier.p1.x} ${bezier.p1.y} ${bezier.p2.x} ${bezier.p2.y} ${bezier.p3.x} ${bezier.p3.y}`\r\n          );\r\n          this.element.appendChild($path);\r\n        });\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Point, Vector } from './vector';\r\n\r\nexport class CubicBezier {\r\n  public static from(cubicBezierLike: {\r\n    p0: Point;\r\n    p1: Point;\r\n    p2: Point;\r\n    p3: Point;\r\n  }): CubicBezier {\r\n    return new CubicBezier(\r\n      Vector.from(cubicBezierLike.p0),\r\n      Vector.from(cubicBezierLike.p1),\r\n      Vector.from(cubicBezierLike.p2),\r\n      Vector.from(cubicBezierLike.p3)\r\n    );\r\n  }\r\n\r\n  public constructor(\r\n    public readonly p0: Vector,\r\n    public readonly p1: Vector,\r\n    public readonly p2: Vector,\r\n    public readonly p3: Vector\r\n  ) {}\r\n\r\n  public sample(t: number): Vector {\r\n    const ti = 1 - t;\r\n    const t0 = ti * ti * ti;\r\n    const t1 = 3 * ti * ti * t;\r\n    const t2 = 3 * ti * t * t;\r\n    const t3 = t * t * t;\r\n    return this.p0\r\n      .multiply(t0)\r\n      .add(this.p1.multiply(t1))\r\n      .add(this.p2.multiply(t2))\r\n      .add(this.p3.multiply(t3));\r\n  }\r\n}\r\n","import { CubicBezier } from './cubic-bezier';\r\nimport { Vector } from './vector';\r\n\r\n// Copyright (c) 2015 burningmime\r\n//\r\n// This software is provided 'as-is', without any express or implied\r\n// warranty. In no event will the authors be held liable for any damages\r\n// arising from the use of this software.\r\n//\r\n// Permission is granted to anyone to use this software for any purpose,\r\n// including commercial applications, and to alter it and redistribute it\r\n// freely, subject to the following restrictions:\r\n//\r\n// 1. The origin of this software must not be misrepresented; you must not\r\n//    claim that you wrote the original software. If you use this software\r\n//    in a product, an acknowledgement in the product documentation would be\r\n//    appreciated but is not required.\r\n// 2. Altered source versions must be plainly marked as such, and must not be\r\n//    misrepresented as being the original software.\r\n// 3. This notice may not be removed or altered from any source distribution.\r\n\r\nconst MAX_ITERS = 4;\r\nconst END_TANGENT_N_PTS = 8;\r\nconst MID_TANGENT_N_PTS = 4;\r\n\r\nexport class CurveFitBase {\r\n  public _pts: ReadonlyArray<Vector>;\r\n  public _arclen: ReadonlyArray<number>;\r\n  protected _u: number[] = [];\r\n  protected _squaredError: number = 0;\r\n\r\n  protected fitCurve(\r\n    first: number,\r\n    last: number,\r\n    tanL: Vector,\r\n    tanR: Vector,\r\n    curve: CubicBezier,\r\n    split: number\r\n  ): {\r\n    response: boolean;\r\n    split: number;\r\n    curve: CubicBezier;\r\n  } {\r\n    const result: {\r\n      response: boolean;\r\n      split: number;\r\n      curve: CubicBezier;\r\n    } = {\r\n      response: false,\r\n      split: split,\r\n      curve: curve,\r\n    };\r\n\r\n    const pts = this._pts;\r\n    const nPts = last - first + 1;\r\n    if (nPts < 2) {\r\n      throw new Error(\r\n        'INTERNAL ERROR: Should always have at least 2 points here'\r\n      );\r\n    } else if (nPts == 2) {\r\n      const p0 = pts[first];\r\n      const p3 = pts[last];\r\n      const alpha = p0.distance(p3) / 3;\r\n      const p1 = tanL.multiply(alpha).add(p0);\r\n      const p2 = tanR.multiply(alpha).add(p3);\r\n      curve = new CubicBezier(p0, p1, p2, p3);\r\n      result.curve = curve;\r\n      split = 0;\r\n      result.split = split;\r\n      result.response = true;\r\n      return result;\r\n    } else {\r\n      split = 0;\r\n      result.split = split;\r\n      this.arcLengthParamaterize(first, last);\r\n      curve = null;\r\n      result.curve = curve;\r\n      for (let i = 0; i < MAX_ITERS + 1; i++) {\r\n        if (i != 0) {\r\n          this.reparameterize(first, last, curve);\r\n        }\r\n        curve = this.generateBezier(first, last, tanL, tanR);\r\n        result.curve = curve;\r\n        const res = this.findMaxSquaredError(first, last, curve, result.split);\r\n        result.split = res.split;\r\n        if (res.response < this._squaredError) {\r\n          result.response = true;\r\n          return result;\r\n        }\r\n      }\r\n      result.response = false;\r\n      return result;\r\n    }\r\n  }\r\n\r\n  protected findMaxSquaredError(\r\n    first: number,\r\n    last: number,\r\n    curve: CubicBezier = null,\r\n    split = 0\r\n  ): {\r\n    response: number;\r\n    split: number;\r\n  } {\r\n    const result = {\r\n      response: 0,\r\n      split: split,\r\n    };\r\n\r\n    const pts = this._pts;\r\n    const u = this._u;\r\n    let s = (last - first + 1) / 2;\r\n    const nPts = last - first + 1;\r\n    let max = 0;\r\n    for (let i = 1; i < nPts; i++) {\r\n      const v0 = pts[first + i];\r\n      const v1 = curve.sample(u[i]);\r\n      const d = v0.distanceSquared(v1);\r\n      if (d > max) {\r\n        max = d;\r\n        s = i;\r\n      }\r\n    }\r\n\r\n    split = s + first;\r\n    if (split <= first) split = first + 1;\r\n    if (split >= last) split = last - 1;\r\n\r\n    result.split = split;\r\n    result.response = max;\r\n    return result;\r\n  }\r\n\r\n  protected generateBezier(\r\n    first: number,\r\n    last: number,\r\n    tanL: Vector,\r\n    tanR: Vector\r\n  ): CubicBezier {\r\n    const pts = this._pts;\r\n    const u = this._u;\r\n    const nPts = last - first + 1;\r\n    const p0 = pts[first];\r\n    const p3 = pts[last];\r\n    let c00 = 0;\r\n    let c01 = 0;\r\n    let c11 = 0;\r\n    let x0 = 0;\r\n    let x1 = 0;\r\n    for (let i = 1; i < nPts; i++) {\r\n      const t = u[i];\r\n      const ti = 1 - t;\r\n      const t0 = ti * ti * ti;\r\n      const t1 = 3 * ti * ti * t;\r\n      const t2 = 3 * ti * t * t;\r\n      const t3 = t * t * t;\r\n\r\n      const s = p0\r\n        .multiply(t0)\r\n        .add(p0.multiply(t1))\r\n        .add(p3.multiply(t2))\r\n        .add(p3.multiply(t3));\r\n      const v = pts[first + i].subtract(s);\r\n\r\n      const a0 = tanL.multiply(t1);\r\n      const a1 = tanR.multiply(t2);\r\n      c00 += a0.dot(a0);\r\n      c01 += a0.dot(a1);\r\n      c11 += a1.dot(a1);\r\n\r\n      x0 += a0.dot(v);\r\n      x1 += a1.dot(v);\r\n    }\r\n\r\n    const det_C0_C1 = c00 * c11 - c01 * c01;\r\n    const det_C0_X = c00 * x1 - c01 * x0;\r\n    const det_X_C1 = x0 * c11 - x1 * c01;\r\n    const alphaL = det_X_C1 / det_C0_C1;\r\n    const alphaR = det_C0_X / det_C0_C1;\r\n\r\n    const linDist = p0.distance(p3);\r\n    const epsilon2 = Number.EPSILON * linDist;\r\n    if (\r\n      Math.abs(det_C0_C1) < Number.EPSILON ||\r\n      alphaL < epsilon2 ||\r\n      alphaR < epsilon2\r\n    ) {\r\n      const alpha = linDist / 3;\r\n      const p1 = tanL.multiply(alpha).add(p0);\r\n      const p2 = tanR.multiply(alpha).add(p3);\r\n      return new CubicBezier(p0, p1, p2, p3);\r\n    } else {\r\n      const p1 = tanL.multiply(alphaL).add(p0);\r\n      const p2 = tanR.multiply(alphaR).add(p3);\r\n      return new CubicBezier(p0, p1, p2, p3);\r\n    }\r\n  }\r\n\r\n  protected reparameterize(\r\n    first: number,\r\n    last: number,\r\n    curve: CubicBezier\r\n  ): void {\r\n    const pts = this._pts;\r\n    const u = this._u;\r\n    const nPts = last - first;\r\n    for (let i = 1; i < nPts; i++) {\r\n      const p = pts[first + i];\r\n      const t = u[i];\r\n      const ti = 1 - t;\r\n\r\n      const qp0 = curve.p1.subtract(curve.p0).multiply(3);\r\n      const qp1 = curve.p2.subtract(curve.p1).multiply(3);\r\n      const qp2 = curve.p3.subtract(curve.p2).multiply(3);\r\n\r\n      const qpp0 = qp1.subtract(qp0).multiply(2);\r\n      const qpp1 = qp2.subtract(qp1).multiply(2);\r\n\r\n      const p0 = curve.sample(t);\r\n      const p1 = qp0\r\n        .multiply(ti * ti)\r\n        .add(qp1.multiply(2 * ti * t))\r\n        .add(qp2.multiply(t * t));\r\n      const p2 = qpp0.multiply(ti).add(qpp1.multiply(t));\r\n\r\n      const num = (p0.x - p.x) * p1.x + (p0.y - p.y) * p1.y;\r\n      const den =\r\n        p1.x * p1.x + p1.y * p1.y + (p0.x - p.x) * p2.x + (p0.y - p.y) * p2.y;\r\n      const newU = t - num / den;\r\n      if (Math.abs(den) > Number.EPSILON && newU >= 0 && newU <= 1) {\r\n        u[i] = newU;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected arcLengthParamaterize(first: number, last: number): void {\r\n    const arclen = this._arclen;\r\n    const u = this._u;\r\n    u.splice(0);\r\n    const diff = arclen[last] - arclen[first];\r\n    const start = arclen[first];\r\n    const nPts = last - first;\r\n    u.push(0);\r\n    for (let i = 1; i < nPts; i++) {\r\n      u.push((arclen[first + i] - start) / diff);\r\n    }\r\n    u.push(1);\r\n  }\r\n\r\n  protected getLeftTangent(last: number): Vector {\r\n    const pts = this._pts;\r\n    const arclen = this._arclen;\r\n    const totalLen = arclen[arclen.length - 1];\r\n    const p0 = pts[0];\r\n    let tanL = pts[1].subtract(p0).normalize();\r\n    let total = tanL;\r\n    let weightTotal = 1;\r\n    last = Math.min(END_TANGENT_N_PTS, last - 1);\r\n    for (let i = 2; i <= last; i++) {\r\n      const ti = 1 - arclen[i] / totalLen;\r\n      const weight = ti * ti * ti;\r\n      const v = pts[i].subtract(p0).normalize();\r\n      total = total.add(v.multiply(weight));\r\n      weightTotal += weight;\r\n    }\r\n    if (total.length() > Number.EPSILON) {\r\n      tanL = total.divide(weightTotal).normalize();\r\n    }\r\n    return tanL;\r\n  }\r\n\r\n  protected getRightTangent(first: number): Vector {\r\n    const pts = this._pts;\r\n    const arclen = this._arclen;\r\n    const totalLen = arclen[arclen.length - 1];\r\n    const p3 = pts[pts.length - 1];\r\n    let tanR = pts[pts.length - 2].subtract(p3).normalize();\r\n    let total = tanR;\r\n    let weightTotal = 1;\r\n    first = Math.max(pts.length - (END_TANGENT_N_PTS + 1), first + 1);\r\n    for (let i = pts.length - 3; i >= first; i--) {\r\n      const t = arclen[i] / totalLen;\r\n      const weight = t * t * t;\r\n      const v = pts[i].subtract(p3).normalize();\r\n      total = total.add(v.multiply(weight));\r\n      weightTotal += weight;\r\n    }\r\n    if (total.length() > Number.EPSILON) {\r\n      tanR = total.divide(weightTotal).normalize();\r\n    }\r\n    return tanR;\r\n  }\r\n\r\n  protected getCenterTangent(\r\n    first: number,\r\n    last: number,\r\n    split: number\r\n  ): Vector {\r\n    const pts = this._pts;\r\n    const arclen = this._arclen;\r\n\r\n    const splitLen = arclen[split];\r\n    const pSplit = pts[split];\r\n\r\n    const firstLen = arclen[first];\r\n    let partLen = splitLen - firstLen;\r\n    let total = new Vector(0, 0);\r\n    let weightTotal = 0;\r\n    for (let i = Math.max(first, split - MID_TANGENT_N_PTS); i < split; i++) {\r\n      const t = (arclen[i] - firstLen) / partLen;\r\n      const weight = t * t * t;\r\n      const v = pts[i].subtract(pSplit).normalize();\r\n      total = total.add(v.multiply(weight));\r\n      weightTotal += weight;\r\n    }\r\n    let tanL =\r\n      total.length() > Number.EPSILON && weightTotal > Number.EPSILON\r\n        ? total.divide(weightTotal).normalize()\r\n        : pts[split - 1].subtract(pSplit).normalize();\r\n\r\n    partLen = arclen[last] - splitLen;\r\n    const rMax = Math.min(last, split + MID_TANGENT_N_PTS);\r\n    total = new Vector(0, 0);\r\n    weightTotal = 0;\r\n    for (let i = split + 1; i <= rMax; i++) {\r\n      const ti = 1 - (arclen[i] - splitLen) / partLen;\r\n      const weight = ti * ti * ti;\r\n      const v = pSplit.subtract(pts[i]).normalize();\r\n      total = total.add(v.multiply(weight));\r\n      weightTotal += weight;\r\n    }\r\n\r\n    let tanR =\r\n      total.length() > Number.EPSILON && weightTotal > Number.EPSILON\r\n        ? total.divide(weightTotal).normalize()\r\n        : pSplit.subtract(pts[split + 1]).normalize();\r\n\r\n    total = tanL.add(tanR);\r\n\r\n    if (total.lengthSquared() < Number.EPSILON) {\r\n      tanL = pts[split - 1].subtract(pSplit).normalize();\r\n      tanR = pSplit.subtract(pts[split + 1]).normalize();\r\n      total = tanL.add(tanR);\r\n      return total.lengthSquared() < Number.EPSILON\r\n        ? tanL\r\n        : total.divide(2).normalize();\r\n    } else {\r\n      return total.divide(2).normalize();\r\n    }\r\n  }\r\n}\r\n","import { CubicBezier } from './cubic-bezier';\r\nimport { CurveFitBase } from './curve-fit-base';\r\nimport { Vector } from './vector';\r\n\r\n// Copyright (c) 2015 burningmime\r\n//\r\n// This software is provided 'as-is', without any express or implied\r\n// warranty. In no event will the authors be held liable for any damages\r\n// arising from the use of this software.\r\n//\r\n// Permission is granted to anyone to use this software for any purpose,\r\n// including commercial applications, and to alter it and redistribute it\r\n// freely, subject to the following restrictions:\r\n//\r\n// 1. The origin of this software must not be misrepresented; you must not\r\n//    claim that you wrote the original software. If you use this software\r\n//    in a product, an acknowledgement in the product documentation would be\r\n//    appreciated but is not required.\r\n// 2. Altered source versions must be plainly marked as such, and must not be\r\n//    misrepresented as being the original software.\r\n// 3. This notice may not be removed or altered from any source distribution.\r\n\r\nconst END_TANGENT_N_PTS = 8;\r\nconst NO_CURVES: CubicBezier[] = [];\r\n\r\nexport function fit(points: readonly Vector[]): CubicBezier[] {\r\n  const arcLen = generateArcLengths(points);\r\n  return [];\r\n}\r\n\r\nexport function generateArcLengths(points: ReadonlyArray<Vector>): number[] {\r\n  const results: number[] = [];\r\n  results.push(0);\r\n  let clen = 0;\r\n  let pp = points[0];\r\n  for (let i = 1; i < points.length; i++) {\r\n    const np = points[i];\r\n    clen += Vector.from(pp).distance(Vector.from(np));\r\n    results.push(clen);\r\n    pp = np;\r\n  }\r\n  return results;\r\n}\r\n\r\nexport class CurveFit extends CurveFitBase {\r\n  private _result: CubicBezier[] = [];\r\n\r\n  public constructor(public readonly _pts: ReadonlyArray<Vector>) {\r\n    super();\r\n    const arclen = [];\r\n    arclen.push(0);\r\n    let clen = 0;\r\n    let pp = this._pts[0];\r\n    for (let i = 1; i < this._pts.length; i++) {\r\n      const np = this._pts[i];\r\n      clen += Vector.from(pp).distance(Vector.from(np));\r\n      arclen.push(clen);\r\n      pp = np;\r\n    }\r\n    this._arclen = arclen;\r\n  }\r\n\r\n  public fit(maxError: number): CubicBezier[] {\r\n    if (maxError < Number.EPSILON) {\r\n      throw new Error(\r\n        'maxError cannot be negative/zero/less than epsilon value'\r\n      );\r\n    }\r\n    if (!this._pts) {\r\n      throw new Error('points');\r\n    }\r\n    if (this._pts.length < 2) {\r\n      return NO_CURVES;\r\n    }\r\n\r\n    this._squaredError = maxError * maxError;\r\n\r\n    const last: number = this._pts.length - 1;\r\n    const tanL = this.getLeftTangent(last);\r\n    const tanR = this.getRightTangent(0);\r\n\r\n    this.fitRecursive(0, last, tanL, tanR);\r\n    return this._result;\r\n  }\r\n\r\n  private fitRecursive(first = 0, last = 0, tanL: Vector, tanR: Vector): void {\r\n    let split = 0;\r\n    let curve = null;\r\n\r\n    const fitCurveResult = this.fitCurve(first, last, tanL, tanR, curve, split);\r\n    split = fitCurveResult.split;\r\n    curve = fitCurveResult.curve;\r\n\r\n    if (fitCurveResult.response) {\r\n      this._result.push(curve);\r\n    } else {\r\n      const tanM1 = this.getCenterTangent(first, last, split);\r\n      const tanM2 = new Vector(-tanM1.x, -tanM1.y);\r\n\r\n      if (first == 0 && split < END_TANGENT_N_PTS) {\r\n        tanL = this.getLeftTangent(split);\r\n      }\r\n      if (\r\n        last == this._pts.length - 1 &&\r\n        split > this._pts.length - (END_TANGENT_N_PTS + 1)\r\n      ) {\r\n        tanR = this.getRightTangent(split);\r\n      }\r\n\r\n      // do actual recursion\r\n      this.fitRecursive(first, split, tanL, tanM1);\r\n      this.fitRecursive(split, last, tanM2, tanR);\r\n    }\r\n  }\r\n}\r\n","import { Vector } from './vector';\r\n\r\n// Copyright (c) 2015 burningmime\r\n//\r\n// This software is provided 'as-is', without any express or implied\r\n// warranty. In no event will the authors be held liable for any damages\r\n// arising from the use of this software.\r\n//\r\n// Permission is granted to anyone to use this software for any purpose,\r\n// including commercial applications, and to alter it and redistribute it\r\n// freely, subject to the following restrictions:\r\n//\r\n// 1. The origin of this software must not be misrepresented; you must not\r\n//    claim that you wrote the original software. If you use this software\r\n//    in a product, an acknowledgement in the product documentation would be\r\n//    appreciated but is not required.\r\n// 2. Altered source versions must be plainly marked as such, and must not be\r\n//    misrepresented as being the original software.\r\n// 3. This notice may not be removed or altered from any source distribution.\r\n\r\nexport function linearize(\r\n  src: Vector[],\r\n  minDistance: number,\r\n  alwaysKeepLastVertex: boolean = false,\r\n  alwaysLinearizeAllVertexes: boolean = true\r\n): Vector[] {\r\n  const dist: Vector[] = [];\r\n  if (src === null) {\r\n    throw new Error('Source vector array is null');\r\n  }\r\n  if (minDistance <= Number.EPSILON) {\r\n    throw new Error(\r\n      `md ${minDistance}' is be less than epsilon ${Number.EPSILON}`\r\n    );\r\n  }\r\n\r\n  if (src.length > 0) {\r\n    let pp = src[0];\r\n    dist.push(pp);\r\n    let cd = 0;\r\n    for (let ip = 1; ip < src.length; ip++) {\r\n      const p0 = src[ip - 1];\r\n      const p1 = src[ip];\r\n      const td = p0.distance(p1);\r\n      if (cd + td > minDistance) {\r\n        const pd = minDistance - cd;\r\n        dist.push(p0.lerp(p1, pd / td));\r\n        let rd = td - pd;\r\n        while (rd > minDistance) {\r\n          rd -= minDistance;\r\n          if (alwaysLinearizeAllVertexes) {\r\n            const np = p0.lerp(p1, (td - rd) / td);\r\n            if (!np.equalsOrClose(pp)) {\r\n              dist.push(np);\r\n              pp = np;\r\n            }\r\n          }\r\n        }\r\n        cd = rd;\r\n      } else {\r\n        cd += td;\r\n      }\r\n    }\r\n    const lp = src[src.length - 1];\r\n    if (alwaysKeepLastVertex || !pp.equalsOrClose(lp)) {\r\n      dist.push(lp);\r\n    }\r\n  }\r\n  return dist;\r\n}\r\n\r\nexport function removeDuplicates(pts: Vector[]): Vector[] {\r\n  if (pts.length < 2) {\r\n    return pts;\r\n  }\r\n\r\n  let prev: Vector = pts[0];\r\n  const len: number = pts.length;\r\n  let nDup: number = 0;\r\n  for (let i = 1; i < len; i++) {\r\n    const cur: Vector = pts[i];\r\n    if (prev.equalsOrClose(cur)) nDup++;\r\n    else prev = cur;\r\n  }\r\n\r\n  if (nDup == 0) {\r\n    return pts;\r\n  } else {\r\n    const dst: Vector[] = [];\r\n    prev = pts[0];\r\n    dst.push(prev);\r\n    for (let i = 1; i < len; i++) {\r\n      const cur: Vector = pts[i];\r\n      if (!prev.equalsOrClose(cur)) {\r\n        dst.push(cur);\r\n        prev = cur;\r\n      }\r\n    }\r\n    return dst;\r\n  }\r\n}\r\n\r\n/// <summary>\r\n/// \"Reduces\" a set of line segments by removing points that are too far away. Does not modify the input list; returns\r\n/// a new list with the points removed.\r\n/// The image says it better than I could ever describe: http://upload.wikimedia.org/wikipedia/commons/3/30/Douglas-Peucker_animated.gif\r\n/// The wiki article: http://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm\r\n/// Based on:  http://www.codeproject.com/Articles/18936/A-Csharp-Implementation-of-Douglas-Peucker-Line-Ap\r\n/// </summary>\r\n/// <param name=\"pts\">Points to reduce</param>\r\n/// <param name=\"error\">Maximum distance of a point to a line. Low values (~2-4) work well for mouse/touchscreen data.</param>\r\n/// <returns>A new list containing only the points needed to approximate the curve.</returns>\r\nexport function rdpReduce(pts: Vector[], error: number): Vector[] {\r\n  if (pts == null) throw new Error('pts');\r\n  pts = removeDuplicates(pts);\r\n  if (pts.length < 3) {\r\n    return [...pts];\r\n  }\r\n  const keepIndex = [];\r\n  keepIndex.push(0);\r\n  keepIndex.push(pts.length - 1);\r\n  rdpRecursive(pts, error, 0, pts.length - 1, keepIndex);\r\n  keepIndex.sort();\r\n  const res: Vector[] = [];\r\n  // ReSharper disable once LoopCanBeConvertedToQuery\r\n  keepIndex.forEach((i) => res.push(pts[i]));\r\n  return res;\r\n}\r\n\r\nexport function rdpRecursive(\r\n  pts: Vector[],\r\n  error: number,\r\n  first: number,\r\n  last: number,\r\n  keepIndex: number[]\r\n): void {\r\n  const nPts = last - first + 1;\r\n  if (nPts < 3) {\r\n    return;\r\n  }\r\n\r\n  const a = pts[first];\r\n  const b = pts[last];\r\n  const abDist = a.distance(b);\r\n  const aCrossB = a.x * b.y - b.x * a.y;\r\n  let maxDist = error;\r\n  let split = 0;\r\n  for (let i = first + 1; i < last - 1; i++) {\r\n    const p = pts[i];\r\n    const pDist = perpendicularDistance(a, b, abDist, aCrossB, p);\r\n    if (pDist > maxDist) {\r\n      maxDist = pDist;\r\n      split = i;\r\n    }\r\n  }\r\n  if (split != 0) {\r\n    keepIndex.push(split);\r\n    rdpRecursive(pts, error, first, split, keepIndex);\r\n    rdpRecursive(pts, error, split, last, keepIndex);\r\n  }\r\n}\r\n\r\n/// <summary>\r\n/// Finds the shortest distance between a point and a line. See: http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\r\n/// </summary>\r\n/// <param name=\"a\">First point of the line.</param>\r\n/// <param name=\"b\">Last point of the line.</param>\r\n/// <param name=\"abDist\">Distance between a and b (length of the line).</param>\r\n/// <param name=\"aCrossB\">\"a.X*b.Y - b.X*a.Y\" This would be the Z-component of (⟪a.X, a.Y, 0⟫ ⨯ ⟪b.X, b.Y, 0⟫) in 3-space.</param>\r\n/// <param name=\"p\">The point to test.</param>\r\n/// <returns>The perpendicular distance to the line.</returns>\r\nexport function perpendicularDistance(\r\n  a: Vector,\r\n  b: Vector,\r\n  abDist: number,\r\n  aCrossB: number,\r\n  p: Vector\r\n): number {\r\n  // a profile with the test data showed that originally this was eating up ~44% of the runtime. So, this went through\r\n  // several iterations of optimization and staring at the disassembly. I tried different methods of using cross\r\n  // products, doing the computation with larger vector types, etc... this is the best I could do in ~45 minutes\r\n  // running on 3 hours of sleep, which is all scalar math, but RyuJIT puts it into XMM registers and does\r\n  // ADDSS/SUBSS/MULSS/DIVSS because that's what it likes to do whenever it sees a vector in a function.\r\n  const area = Math.abs(\r\n    aCrossB + b.x * p.y + p.x * a.y - p.x * b.y - a.x * p.y\r\n  );\r\n  const height = area / abDist;\r\n  return height;\r\n}\r\n","export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport class Vector {\r\n  public static from(point: Point): Vector {\r\n    return new Vector(point.x, point.y);\r\n  }\r\n\r\n  public constructor(public x: number, public y: number) {}\r\n\r\n  public add(a: Vector | number): Vector {\r\n    return new Vector(\r\n      this.x + (a instanceof Vector ? a.x : a),\r\n      this.y + (a instanceof Vector ? a.y : a)\r\n    );\r\n  }\r\n\r\n  public subtract(a: Vector | number): Vector {\r\n    return new Vector(\r\n      this.x - (a instanceof Vector ? a.x : a),\r\n      this.y - (a instanceof Vector ? a.y : a)\r\n    );\r\n  }\r\n\r\n  public multiply(a: Vector | number): Vector {\r\n    return new Vector(\r\n      this.x * (a instanceof Vector ? a.x : a),\r\n      this.y * (a instanceof Vector ? a.y : a)\r\n    );\r\n  }\r\n\r\n  public divide(a: Vector | number): Vector {\r\n    return new Vector(\r\n      this.x / (a instanceof Vector ? a.x : a),\r\n      this.y / (a instanceof Vector ? a.y : a)\r\n    );\r\n  }\r\n\r\n  public distance(a: Vector): number {\r\n    return Math.sqrt(this.distanceSquared(a));\r\n  }\r\n\r\n  public distanceSquared(a: Vector): number {\r\n    const x = this.x - a.x;\r\n    const y = this.y - a.y;\r\n    return x * x + y * y;\r\n  }\r\n\r\n  public lerp(v: Vector, fraction: number): Vector {\r\n    return new Vector(\r\n      this.x + (v.x - this.x) * fraction,\r\n      this.y + (v.y - this.y) * fraction\r\n    );\r\n  }\r\n\r\n  public equalsOrClose(a: Vector): boolean {\r\n    return this.distanceSquared(a) < Number.EPSILON;\r\n  }\r\n\r\n  public dot(a: Vector): number {\r\n    return this.x * a.x + this.y * a.y;\r\n  }\r\n\r\n  public lengthSquared(): number {\r\n    return this.x * this.x + this.y * this.y;\r\n  }\r\n\r\n  public length(): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  public normalize(): Vector {\r\n    return this.divide(this.length());\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Drawer, PreprocessMode, RenderMode } from './drawer';\r\n\r\nconst $svg: SVGSVGElement = document.getElementById(\r\n  'svg-root'\r\n) as unknown as SVGSVGElement;\r\n\r\nlet preprocessMode: PreprocessMode = PreprocessMode.NONE;\r\nlet renderMode: RenderMode = RenderMode.ORIGINAL_POINTS;\r\nlet colorize: boolean = true;\r\nlet linearizePointDistance: number = 8;\r\nlet ramerDouglaspeucherError: number = 1;\r\nlet curveFittingError: number = 8;\r\n\r\nconst $preprocessModes = document.getElementsByName('preprocess-mode');\r\n$preprocessModes.forEach(($preprocessMode) =>\r\n  $preprocessMode.addEventListener('click', (e) => {\r\n    const target = e.target as HTMLInputElement;\r\n    if (target.checked) {\r\n      preprocessMode = target.value as PreprocessMode;\r\n      onValueChanged();\r\n    }\r\n  })\r\n);\r\n\r\nconst $renderModes = document.getElementsByName('render-mode');\r\n$renderModes.forEach(($renderMode) =>\r\n  $renderMode.addEventListener('click', (e) => {\r\n    const target = e.target as HTMLInputElement;\r\n    if (target.checked) {\r\n      renderMode = target.value as RenderMode;\r\n      onValueChanged();\r\n    }\r\n  })\r\n);\r\n\r\nconst $colorize = document.getElementById('colorize') as HTMLInputElement;\r\n$colorize.addEventListener('click', (e) => {\r\n  colorize = !!$colorize.checked;\r\n  onValueChanged();\r\n});\r\n\r\nconst $linearizePointDistanceDisplay = document.getElementById(\r\n  'linearize-point-distance'\r\n);\r\nconst $linearizePointDistance = document.getElementById(\r\n  'linearize-point-distance-slider'\r\n) as HTMLInputElement;\r\n$linearizePointDistance.addEventListener('input', (e) => {\r\n  const target = e.target as HTMLInputElement;\r\n  const value = Number(target.value);\r\n  $linearizePointDistanceDisplay.innerHTML = target.value;\r\n  linearizePointDistance = value;\r\n  onValueChanged();\r\n});\r\n\r\nconst $curveFittingErrorDisplay = document.getElementById(\r\n  'curve-fitting-error'\r\n);\r\nconst $curveFittingError = document.getElementById(\r\n  'curve-fitting-error-slider'\r\n) as HTMLInputElement;\r\n$curveFittingError.addEventListener('input', (e) => {\r\n  const target = e.target as HTMLInputElement;\r\n  const value = Number(target.value);\r\n  $curveFittingErrorDisplay.innerHTML = target.value;\r\n  curveFittingError = value;\r\n  onValueChanged();\r\n});\r\n\r\nconst $ramerDouglaspeucherErrorDisplay = document.getElementById(\r\n  'ramer-douglas-peucher-error'\r\n);\r\nconst $ramerDouglaspeucherError = document.getElementById(\r\n  'ramer-douglas-peucher-error-slider'\r\n) as HTMLInputElement;\r\n$ramerDouglaspeucherError.addEventListener('input', (e) => {\r\n  const target = e.target as HTMLInputElement;\r\n  const value = Number(target.value);\r\n  $ramerDouglaspeucherErrorDisplay.innerHTML = target.value;\r\n  ramerDouglaspeucherError = value;\r\n  onValueChanged();\r\n});\r\n\r\nconst drawer = new Drawer($svg);\r\n\r\nfunction onValueChanged(): void {\r\n  drawer.options = {\r\n    renderMode: renderMode,\r\n    preprocessMode: preprocessMode,\r\n    linearizePointDistance: linearizePointDistance,\r\n    curveFittingError: curveFittingError,\r\n    rdpError: ramerDouglaspeucherError,\r\n    colorize: colorize,\r\n  };\r\n}\r\n"],"names":[],"sourceRoot":""}