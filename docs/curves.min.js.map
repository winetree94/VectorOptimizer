{"version":3,"file":"curves.min.js","mappings":"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","sources":["webpack://Curves/webpack/universalModuleDefinition","webpack://Curves/./src/curves.sample/drawer.ts","webpack://Curves/./src/curves/cubic-bezier.ts","webpack://Curves/./src/curves/curve-fit-base.ts","webpack://Curves/./src/curves/curve-fit.ts","webpack://Curves/./src/curves/curve-preprocess.ts","webpack://Curves/./src/curves/vector.ts","webpack://Curves/webpack/bootstrap","webpack://Curves/./src/curves.sample/main.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Curves\"] = factory();\n\telse\n\t\troot[\"Curves\"] = factory();\n})(self, function() {\nreturn ","/* eslint-disable no-case-declarations */\nimport { CurveFit } from '../curves/curve-fit';\nimport { linearize } from '../curves/curve-preprocess';\nimport {\n  ExpectedLinearizedSample,\n  SampleVertexes,\n} from '../curves/curve-preprocess.sample';\nimport { Vector } from '../curves/vector';\n\nfunction getRandomColor(): string {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport enum RenderMode {\n  ORIGINAL_POINTS = 'original-points',\n  ORIGINAL_LINES = 'original-lines',\n  PREPROCESSED = 'preprocessed',\n  CONTROL_POINTS = 'control-points',\n  REPARAMATERIZED = 'reparamaterized',\n  FINAL_CURVES = 'final-curves',\n}\n\nexport enum PreprocessMode {\n  NONE = 'none',\n  LINEARIZE = 'linearize',\n  RAMER_DOUGLAS_PEUCHER = 'ramer-douglas-peucher',\n}\n\nexport interface DrawerOptions {\n  renderMode: RenderMode;\n  preprocessMode: PreprocessMode;\n  linearizePointDistance: number;\n  curveFittingError: number;\n  colorize: boolean;\n}\n\nexport class Drawer {\n  private originPoints: Point[] = [];\n\n  private _options: DrawerOptions = {\n    preprocessMode: PreprocessMode.NONE,\n    renderMode: RenderMode.ORIGINAL_POINTS,\n    linearizePointDistance: 8,\n    curveFittingError: 8,\n    colorize: true,\n  };\n\n  public get options(): DrawerOptions {\n    return this._options;\n  }\n\n  public set options(options: DrawerOptions) {\n    this._options = {\n      ...this._options,\n      ...options,\n    };\n    this.render();\n  }\n\n  public constructor(private readonly element: SVGSVGElement) {\n    element.addEventListener('pointerdown', this.onMouseDown.bind(this));\n    element.addEventListener('mousedown', this.onMouseDown.bind(this));\n    element.addEventListener('touchstart', (e) => e.preventDefault());\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    event.preventDefault();\n    this.clearOriginPoints();\n    this.clearView();\n\n    const startPoint = {\n      x: event.offsetX,\n      y: event.offsetY,\n    };\n    const $startCircle = this.createCircle(startPoint);\n    this.element.appendChild($startCircle);\n    this.originPoints.push(startPoint);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const point = {\n        x: event.offsetX,\n        y: event.offsetY,\n      };\n      const $circle = this.createCircle(point);\n      this.element.appendChild($circle);\n      this.originPoints.push(point);\n    };\n\n    const onMouseUp = () => {\n      this.element.removeEventListener('pointermove', onMouseMove);\n      this.element.removeEventListener('pointerup', onMouseUp);\n      this.element.removeEventListener('mousemove', onMouseMove);\n      this.element.removeEventListener('mouseup', onMouseUp);\n      this.render();\n    };\n\n    this.element.addEventListener('mousemove', onMouseMove);\n    this.element.addEventListener('mouseup', onMouseUp);\n    this.element.addEventListener('pointermove', onMouseMove);\n    this.element.addEventListener('pointerup', onMouseUp);\n  }\n\n  public createCircle(point: Point): SVGCircleElement {\n    const $circle = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'circle'\n    );\n    $circle.setAttribute('cx', point.x.toString());\n    $circle.setAttribute('cy', point.y.toString());\n    $circle.setAttribute('r', (1).toString());\n    $circle.setAttribute('fill', 'red');\n    return $circle;\n  }\n\n  public clearOriginPoints(): void {\n    this.originPoints.splice(0);\n  }\n\n  public clearView(): void {\n    this.element.innerHTML = '';\n  }\n\n  private transformToVector(): Vector[] {\n    return this.originPoints.map((point) => Vector.from(point));\n  }\n\n  private getPreprocessedVectors(): Vector[] {\n    switch (this.options.preprocessMode) {\n      case PreprocessMode.NONE:\n        return this.transformToVector();\n      case PreprocessMode.LINEARIZE:\n        return linearize(\n          this.transformToVector(),\n          this.options.linearizePointDistance\n        );\n      case PreprocessMode.RAMER_DOUGLAS_PEUCHER:\n        return this.transformToVector();\n    }\n  }\n\n  private render(): void {\n    switch (this.options.renderMode) {\n      case RenderMode.ORIGINAL_POINTS:\n        this.clearView();\n        this.originPoints.forEach((point) => {\n          const $circle = this.createCircle(point);\n          this.element.appendChild($circle);\n        });\n        break;\n      case RenderMode.ORIGINAL_LINES:\n        this.clearView();\n        for (let i = 1; i < this.originPoints.length; i++) {\n          const previous = this.originPoints[i - 1];\n          const current = this.originPoints[i];\n          const $polyline = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'polyline'\n          );\n          $polyline.setAttribute('fill', 'none');\n          $polyline.setAttribute(\n            'stroke',\n            this.options.colorize ? getRandomColor() : 'red'\n          );\n          $polyline.setAttribute(\n            'points',\n            `${previous.x} ${previous.y} ${current.x}, ${current.y}`\n          );\n          this.element.appendChild($polyline);\n        }\n        break;\n      case RenderMode.PREPROCESSED:\n        this.clearView();\n        this.getPreprocessedVectors().forEach((vector) => {\n          const $circle = this.createCircle(vector);\n          this.element.appendChild($circle);\n        });\n        break;\n      case RenderMode.FINAL_CURVES:\n        this.clearView();\n        const $path = document.createElementNS(\n          'http://www.w3.org/2000/svg',\n          'path'\n        );\n        $path.setAttribute('fill', 'none');\n        $path.setAttribute('stroke', 'red');\n\n        const curveFit = new CurveFit(\n          this.getPreprocessedVectors()\n          // ExpectedLinearizedSample.map((point) => Vector.from(point))\n        );\n        curveFit.fit(this.options.curveFittingError).forEach((bezier) => {\n          const $path = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'path'\n          );\n          $path.setAttribute('fill', 'none');\n          $path.setAttribute(\n            'stroke',\n            this.options.colorize ? getRandomColor() : 'red'\n          );\n          $path.setAttribute('stroke-width', `${2}px`);\n          $path.setAttribute(\n            'd',\n            `M ${bezier.p0.x} ${bezier.p0.y} C ${bezier.p1.x} ${bezier.p1.y} ${bezier.p2.x} ${bezier.p2.y} ${bezier.p3.x} ${bezier.p3.y}`\n          );\n          this.element.appendChild($path);\n        });\n        break;\n    }\n  }\n}\n","import { Point, Vector } from './vector';\n\nexport class CubicBezier {\n  public static from(cubicBezierLike: {\n    p0: Point;\n    p1: Point;\n    p2: Point;\n    p3: Point;\n  }): CubicBezier {\n    return new CubicBezier(\n      Vector.from(cubicBezierLike.p0),\n      Vector.from(cubicBezierLike.p1),\n      Vector.from(cubicBezierLike.p2),\n      Vector.from(cubicBezierLike.p3)\n    );\n  }\n\n  public constructor(\n    public readonly p0: Vector,\n    public readonly p1: Vector,\n    public readonly p2: Vector,\n    public readonly p3: Vector\n  ) {}\n\n  public sample(t: number): Vector {\n    const ti = 1 - t;\n    const t0 = ti * ti * ti;\n    const t1 = 3 * ti * ti * t;\n    const t2 = 3 * ti * t * t;\n    const t3 = t * t * t;\n    return this.p0\n      .multiply(t0)\n      .add(this.p1.multiply(t1))\n      .add(this.p2.multiply(t2))\n      .add(this.p3.multiply(t3));\n  }\n}\n","import { CubicBezier } from './cubic-bezier';\nimport { Vector } from './vector';\n\n// Copyright (c) 2015 burningmime\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//    claim that you wrote the original software. If you use this software\n//    in a product, an acknowledgement in the product documentation would be\n//    appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//    misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAX_ITERS = 4;\nconst END_TANGENT_N_PTS = 8;\nconst MID_TANGENT_N_PTS = 4;\n\nexport class CurveFitBase {\n  public _pts: ReadonlyArray<Vector>;\n  public _arclen: ReadonlyArray<number>;\n  protected _u: number[] = [];\n  protected _squaredError: number = 0;\n\n  protected fitCurve(\n    first: number,\n    last: number,\n    tanL: Vector,\n    tanR: Vector,\n    curve: CubicBezier,\n    split: number\n  ): {\n    response: boolean;\n    split: number;\n    curve: CubicBezier;\n  } {\n    const result: {\n      response: boolean;\n      split: number;\n      curve: CubicBezier;\n    } = {\n      response: false,\n      split: split,\n      curve: curve,\n    };\n\n    const pts = this._pts;\n    const nPts = last - first + 1;\n    if (nPts < 2) {\n      throw new Error(\n        'INTERNAL ERROR: Should always have at least 2 points here'\n      );\n    } else if (nPts == 2) {\n      const p0 = pts[first];\n      const p3 = pts[last];\n      const alpha = p0.distance(p3) / 3;\n      const p1 = tanL.multiply(alpha).add(p0);\n      const p2 = tanR.multiply(alpha).add(p3);\n      curve = new CubicBezier(p0, p1, p2, p3);\n      result.curve = curve;\n      split = 0;\n      result.split = split;\n      result.response = true;\n      return result;\n    } else {\n      split = 0;\n      result.split = split;\n      this.arcLengthParamaterize(first, last);\n      curve = null;\n      result.curve = curve;\n      for (let i = 0; i < MAX_ITERS + 1; i++) {\n        if (i != 0) {\n          this.reparameterize(first, last, curve);\n        }\n        curve = this.generateBezier(first, last, tanL, tanR);\n        result.curve = curve;\n        const res = this.findMaxSquaredError(first, last, curve, result.split);\n        result.split = res.split;\n        if (res.response < this._squaredError) {\n          result.response = true;\n          return result;\n        }\n      }\n      result.response = false;\n      return result;\n    }\n  }\n\n  protected findMaxSquaredError(\n    first: number,\n    last: number,\n    curve: CubicBezier = null,\n    split = 0\n  ): {\n    response: number;\n    split: number;\n  } {\n    const result = {\n      response: 0,\n      split: split,\n    };\n\n    const pts = this._pts;\n    const u = this._u;\n    let s = (last - first + 1) / 2;\n    const nPts = last - first + 1;\n    let max = 0;\n    for (let i = 1; i < nPts; i++) {\n      const v0 = pts[first + i];\n      const v1 = curve.sample(u[i]);\n      const d = v0.distanceSquared(v1);\n      if (d > max) {\n        max = d;\n        s = i;\n      }\n    }\n\n    split = s + first;\n    if (split <= first) split = first + 1;\n    if (split >= last) split = last - 1;\n\n    result.split = split;\n    result.response = max;\n    return result;\n  }\n\n  protected generateBezier(\n    first: number,\n    last: number,\n    tanL: Vector,\n    tanR: Vector\n  ): CubicBezier {\n    const pts = this._pts;\n    const u = this._u;\n    const nPts = last - first + 1;\n    const p0 = pts[first];\n    const p3 = pts[last];\n    let c00 = 0;\n    let c01 = 0;\n    let c11 = 0;\n    let x0 = 0;\n    let x1 = 0;\n    for (let i = 1; i < nPts; i++) {\n      const t = u[i];\n      const ti = 1 - t;\n      const t0 = ti * ti * ti;\n      const t1 = 3 * ti * ti * t;\n      const t2 = 3 * ti * t * t;\n      const t3 = t * t * t;\n\n      const s = p0\n        .multiply(t0)\n        .add(p0.multiply(t1))\n        .add(p3.multiply(t2))\n        .add(p3.multiply(t3));\n      const v = pts[first + i].subtract(s);\n\n      const a0 = tanL.multiply(t1);\n      const a1 = tanR.multiply(t2);\n      c00 += a0.dot(a0);\n      c01 += a0.dot(a1);\n      c11 += a1.dot(a1);\n\n      x0 += a0.dot(v);\n      x1 += a1.dot(v);\n    }\n\n    const det_C0_C1 = c00 * c11 - c01 * c01;\n    const det_C0_X = c00 * x1 - c01 * x0;\n    const det_X_C1 = x0 * c11 - x1 * c01;\n    const alphaL = det_X_C1 / det_C0_C1;\n    const alphaR = det_C0_X / det_C0_C1;\n\n    const linDist = p0.distance(p3);\n    const epsilon2 = Number.EPSILON * linDist;\n    if (\n      Math.abs(det_C0_C1) < Number.EPSILON ||\n      alphaL < epsilon2 ||\n      alphaR < epsilon2\n    ) {\n      const alpha = linDist / 3;\n      const p1 = tanL.multiply(alpha).add(p0);\n      const p2 = tanR.multiply(alpha).add(p3);\n      return new CubicBezier(p0, p1, p2, p3);\n    } else {\n      const p1 = tanL.multiply(alphaL).add(p0);\n      const p2 = tanR.multiply(alphaR).add(p3);\n      return new CubicBezier(p0, p1, p2, p3);\n    }\n  }\n\n  protected reparameterize(\n    first: number,\n    last: number,\n    curve: CubicBezier\n  ): void {\n    const pts = this._pts;\n    const u = this._u;\n    const nPts = last - first;\n    for (let i = 1; i < nPts; i++) {\n      const p = pts[first + i];\n      const t = u[i];\n      const ti = 1 - t;\n\n      const qp0 = curve.p1.subtract(curve.p0).multiply(3);\n      const qp1 = curve.p2.subtract(curve.p1).multiply(3);\n      const qp2 = curve.p3.subtract(curve.p2).multiply(3);\n\n      const qpp0 = qp1.subtract(qp0).multiply(2);\n      const qpp1 = qp2.subtract(qp1).multiply(2);\n\n      const p0 = curve.sample(t);\n      const p1 = qp0\n        .multiply(ti * ti)\n        .add(qp1.multiply(2 * ti * t))\n        .add(qp2.multiply(t * t));\n      const p2 = qpp0.multiply(ti).add(qpp1.multiply(t));\n\n      const num = (p0.x - p.x) * p1.x + (p0.y - p.y) * p1.y;\n      const den =\n        p1.x * p1.x + p1.y * p1.y + (p0.x - p.x) * p2.x + (p0.y - p.y) * p2.y;\n      const newU = t - num / den;\n      if (Math.abs(den) > Number.EPSILON && newU >= 0 && newU <= 1) {\n        u[i] = newU;\n      }\n    }\n  }\n\n  protected arcLengthParamaterize(first: number, last: number): void {\n    const arclen = this._arclen;\n    const u = this._u;\n    u.splice(0);\n    const diff = arclen[last] - arclen[first];\n    const start = arclen[first];\n    const nPts = last - first;\n    u.push(0);\n    for (let i = 1; i < nPts; i++) {\n      u.push((arclen[first + i] - start) / diff);\n    }\n    u.push(1);\n  }\n\n  protected getLeftTangent(last: number): Vector {\n    const pts = this._pts;\n    const arclen = this._arclen;\n    const totalLen = arclen[arclen.length - 1];\n    const p0 = pts[0];\n    let tanL = pts[1].subtract(p0).normalize();\n    let total = tanL;\n    let weightTotal = 1;\n    last = Math.min(END_TANGENT_N_PTS, last - 1);\n    for (let i = 2; i <= last; i++) {\n      const ti = 1 - arclen[i] / totalLen;\n      const weight = ti * ti * ti;\n      const v = pts[i].subtract(p0).normalize();\n      total = total.add(v.multiply(weight));\n      weightTotal += weight;\n    }\n    if (total.length() > Number.EPSILON) {\n      tanL = total.divide(weightTotal).normalize();\n    }\n    return tanL;\n  }\n\n  protected getRightTangent(first: number): Vector {\n    const pts = this._pts;\n    const arclen = this._arclen;\n    const totalLen = arclen[arclen.length - 1];\n    const p3 = pts[pts.length - 1];\n    let tanR = pts[pts.length - 2].subtract(p3).normalize();\n    let total = tanR;\n    let weightTotal = 1;\n    first = Math.max(pts.length - (END_TANGENT_N_PTS + 1), first + 1);\n    for (let i = pts.length - 3; i >= first; i--) {\n      const t = arclen[i] / totalLen;\n      const weight = t * t * t;\n      const v = pts[i].subtract(p3).normalize();\n      total = total.add(v.multiply(weight));\n      weightTotal += weight;\n    }\n    if (total.length() > Number.EPSILON) {\n      tanR = total.divide(weightTotal).normalize();\n    }\n    return tanR;\n  }\n\n  protected getCenterTangent(\n    first: number,\n    last: number,\n    split: number\n  ): Vector {\n    const pts = this._pts;\n    const arclen = this._arclen;\n\n    const splitLen = arclen[split];\n    const pSplit = pts[split];\n\n    const firstLen = arclen[first];\n    let partLen = splitLen - firstLen;\n    let total = new Vector(0, 0);\n    let weightTotal = 0;\n    for (let i = Math.max(first, split - MID_TANGENT_N_PTS); i < split; i++) {\n      const t = (arclen[i] - firstLen) / partLen;\n      const weight = t * t * t;\n      const v = pts[i].subtract(pSplit).normalize();\n      total = total.add(v.multiply(weight));\n      weightTotal += weight;\n    }\n    let tanL =\n      total.length() > Number.EPSILON && weightTotal > Number.EPSILON\n        ? total.divide(weightTotal).normalize()\n        : pts[split - 1].subtract(pSplit).normalize();\n\n    partLen = arclen[last] - splitLen;\n    const rMax = Math.min(last, split + MID_TANGENT_N_PTS);\n    total = new Vector(0, 0);\n    weightTotal = 0;\n    for (let i = split + 1; i <= rMax; i++) {\n      const ti = 1 - (arclen[i] - splitLen) / partLen;\n      const weight = ti * ti * ti;\n      const v = pSplit.subtract(pts[i]).normalize();\n      total = total.add(v.multiply(weight));\n      weightTotal += weight;\n    }\n\n    let tanR =\n      total.length() > Number.EPSILON && weightTotal > Number.EPSILON\n        ? total.divide(weightTotal).normalize()\n        : pSplit.subtract(pts[split + 1]).normalize();\n\n    total = tanL.add(tanR);\n\n    if (total.lengthSquared() < Number.EPSILON) {\n      tanL = pts[split - 1].subtract(pSplit).normalize();\n      tanR = pSplit.subtract(pts[split + 1]).normalize();\n      total = tanL.add(tanR);\n      return total.lengthSquared() < Number.EPSILON\n        ? tanL\n        : total.divide(2).normalize();\n    } else {\n      return total.divide(2).normalize();\n    }\n  }\n}\n","import { CubicBezier } from './cubic-bezier';\nimport { CurveFitBase } from './curve-fit-base';\nimport { Vector } from './vector';\n\n// Copyright (c) 2015 burningmime\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//    claim that you wrote the original software. If you use this software\n//    in a product, an acknowledgement in the product documentation would be\n//    appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//    misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst END_TANGENT_N_PTS = 8;\nconst NO_CURVES: CubicBezier[] = [];\n\nexport function fit(points: readonly Vector[]): CubicBezier[] {\n  const arcLen = generateArcLengths(points);\n  return [];\n}\n\nexport function generateArcLengths(points: ReadonlyArray<Vector>): number[] {\n  const results: number[] = [];\n  results.push(0);\n  let clen = 0;\n  let pp = points[0];\n  for (let i = 1; i < points.length; i++) {\n    const np = points[i];\n    clen += Vector.from(pp).distance(Vector.from(np));\n    results.push(clen);\n    pp = np;\n  }\n  return results;\n}\n\nexport class CurveFit extends CurveFitBase {\n  private _result: CubicBezier[] = [];\n\n  public constructor(public readonly _pts: ReadonlyArray<Vector>) {\n    super();\n    const arclen = [];\n    arclen.push(0);\n    let clen = 0;\n    let pp = this._pts[0];\n    for (let i = 1; i < this._pts.length; i++) {\n      const np = this._pts[i];\n      clen += Vector.from(pp).distance(Vector.from(np));\n      arclen.push(clen);\n      pp = np;\n    }\n    this._arclen = arclen;\n  }\n\n  public fit(maxError: number): CubicBezier[] {\n    if (maxError < Number.EPSILON) {\n      throw new Error(\n        'maxError cannot be negative/zero/less than epsilon value'\n      );\n    }\n    if (!this._pts) {\n      throw new Error('points');\n    }\n    if (this._pts.length < 2) {\n      return NO_CURVES;\n    }\n\n    this._squaredError = maxError * maxError;\n\n    const last: number = this._pts.length - 1;\n    const tanL = this.getLeftTangent(last);\n    const tanR = this.getRightTangent(0);\n\n    this.fitRecursive(0, last, tanL, tanR);\n    return this._result;\n  }\n\n  private fitRecursive(first = 0, last = 0, tanL: Vector, tanR: Vector): void {\n    let split = 0;\n    let curve = null;\n\n    const fitCurveResult = this.fitCurve(first, last, tanL, tanR, curve, split);\n    split = fitCurveResult.split;\n    curve = fitCurveResult.curve;\n\n    if (fitCurveResult.response) {\n      this._result.push(curve);\n    } else {\n      const tanM1 = this.getCenterTangent(first, last, split);\n      const tanM2 = new Vector(-tanM1.x, -tanM1.y);\n\n      if (first == 0 && split < END_TANGENT_N_PTS) {\n        tanL = this.getLeftTangent(split);\n      }\n      if (\n        last == this._pts.length - 1 &&\n        split > this._pts.length - (END_TANGENT_N_PTS + 1)\n      ) {\n        tanR = this.getRightTangent(split);\n      }\n\n      // do actual recursion\n      this.fitRecursive(first, split, tanL, tanM1);\n      this.fitRecursive(split, last, tanM2, tanR);\n    }\n  }\n}\n","import { Vector } from './vector';\n\n// Copyright (c) 2015 burningmime\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//    claim that you wrote the original software. If you use this software\n//    in a product, an acknowledgement in the product documentation would be\n//    appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//    misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nexport function linearize(\n  src: Vector[],\n  minDistance: number,\n  alwaysKeepLastVertex: boolean = false,\n  alwaysLinearizeAllVertexes: boolean = true\n): Vector[] {\n  const dist: Vector[] = [];\n  if (src === null) {\n    throw new Error('Source vector array is null');\n  }\n  if (minDistance <= Number.EPSILON) {\n    throw new Error(\n      `md ${minDistance}' is be less than epsilon ${Number.EPSILON}`\n    );\n  }\n\n  if (src.length > 0) {\n    let pp = src[0];\n    dist.push(pp);\n    let cd = 0;\n    for (let ip = 1; ip < src.length; ip++) {\n      const p0 = src[ip - 1];\n      const p1 = src[ip];\n      const td = p0.distance(p1);\n      if (cd + td > minDistance) {\n        const pd = minDistance - cd;\n        dist.push(p0.lerp(p1, pd / td));\n        let rd = td - pd;\n        while (rd > minDistance) {\n          rd -= minDistance;\n          if (alwaysLinearizeAllVertexes) {\n            const np = p0.lerp(p1, (td - rd) / td);\n            if (!np.equalsOrClose(pp)) {\n              dist.push(np);\n              pp = np;\n            }\n          }\n        }\n        cd = rd;\n      } else {\n        cd += td;\n      }\n    }\n    const lp = src[src.length - 1];\n    if (alwaysKeepLastVertex || !pp.equalsOrClose(lp)) {\n      dist.push(lp);\n    }\n  }\n  return dist;\n}\n\nexport function removeDuplicates(pts: Vector[]): Vector[] {\n  if (pts.length < 2) {\n    return pts;\n  }\n\n  let prev: Vector = pts[0];\n  const len: number = pts.length;\n  let nDup: number = 0;\n  for (let i = 1; i < len; i++) {\n    const cur: Vector = pts[i];\n    if (prev.equalsOrClose(cur)) nDup++;\n    else prev = cur;\n  }\n\n  if (nDup == 0) {\n    return pts;\n  } else {\n    const dst: Vector[] = [];\n    prev = pts[0];\n    dst.push(prev);\n    for (let i = 1; i < len; i++) {\n      const cur: Vector = pts[i];\n      if (!prev.equalsOrClose(cur)) {\n        dst.push(cur);\n        prev = cur;\n      }\n    }\n    return dst;\n  }\n}\n","export interface Point {\n  x: number;\n  y: number;\n}\n\nexport class Vector {\n  public static from(point: Point): Vector {\n    return new Vector(point.x, point.y);\n  }\n\n  public constructor(public x: number, public y: number) {}\n\n  public add(a: Vector | number): Vector {\n    return new Vector(\n      this.x + (a instanceof Vector ? a.x : a),\n      this.y + (a instanceof Vector ? a.y : a)\n    );\n  }\n\n  public subtract(a: Vector | number): Vector {\n    return new Vector(\n      this.x - (a instanceof Vector ? a.x : a),\n      this.y - (a instanceof Vector ? a.y : a)\n    );\n  }\n\n  public multiply(a: Vector | number): Vector {\n    return new Vector(\n      this.x * (a instanceof Vector ? a.x : a),\n      this.y * (a instanceof Vector ? a.y : a)\n    );\n  }\n\n  public divide(a: Vector | number): Vector {\n    return new Vector(\n      this.x / (a instanceof Vector ? a.x : a),\n      this.y / (a instanceof Vector ? a.y : a)\n    );\n  }\n\n  public distance(a: Vector): number {\n    return Math.sqrt(this.distanceSquared(a));\n  }\n\n  public distanceSquared(a: Vector): number {\n    const x = this.x - a.x;\n    const y = this.y - a.y;\n    return x * x + y * y;\n  }\n\n  public lerp(v: Vector, fraction: number): Vector {\n    return new Vector(\n      this.x + (v.x - this.x) * fraction,\n      this.y + (v.y - this.y) * fraction\n    );\n  }\n\n  public equalsOrClose(a: Vector): boolean {\n    return this.distanceSquared(a) < Number.EPSILON;\n  }\n\n  public dot(a: Vector): number {\n    return this.x * a.x + this.y * a.y;\n  }\n\n  public lengthSquared(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  public length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  public normalize(): Vector {\n    return this.divide(this.length());\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Drawer, PreprocessMode, RenderMode } from './drawer';\n\nconst $svg: SVGSVGElement = document.getElementById(\n  'svg-root'\n) as unknown as SVGSVGElement;\n\nlet preprocessMode: PreprocessMode = PreprocessMode.NONE;\nlet renderMode: RenderMode = RenderMode.ORIGINAL_POINTS;\nlet colorize: boolean = true;\nlet linearizePointDistance: number = 8;\nlet ramerDouglaspeucherError: number = 1;\nlet curveFittingError: number = 8;\n\nconst $preprocessModes = document.getElementsByName('preprocess-mode');\n$preprocessModes.forEach(($preprocessMode) =>\n  $preprocessMode.addEventListener('click', (e) => {\n    const target = e.target as HTMLInputElement;\n    if (target.checked) {\n      preprocessMode = target.value as PreprocessMode;\n      onValueChanged();\n    }\n  })\n);\n\nconst $renderModes = document.getElementsByName('render-mode');\n$renderModes.forEach(($renderMode) =>\n  $renderMode.addEventListener('click', (e) => {\n    const target = e.target as HTMLInputElement;\n    if (target.checked) {\n      renderMode = target.value as RenderMode;\n      onValueChanged();\n    }\n  })\n);\n\nconst $colorize = document.getElementById('colorize') as HTMLInputElement;\n$colorize.addEventListener('click', (e) => {\n  colorize = !!$colorize.checked;\n  onValueChanged();\n});\n\nconst $linearizePointDistanceDisplay = document.getElementById(\n  'linearize-point-distance'\n);\nconst $linearizePointDistance = document.getElementById(\n  'linearize-point-distance-slider'\n) as HTMLInputElement;\n$linearizePointDistance.addEventListener('input', (e) => {\n  const target = e.target as HTMLInputElement;\n  const value = Number(target.value);\n  $linearizePointDistanceDisplay.innerHTML = target.value;\n  linearizePointDistance = value;\n  onValueChanged();\n});\n\nconst $curveFittingErrorDisplay = document.getElementById(\n  'curve-fitting-error'\n);\nconst $curveFittingError = document.getElementById(\n  'curve-fitting-error-slider'\n) as HTMLInputElement;\n$curveFittingError.addEventListener('input', (e) => {\n  const target = e.target as HTMLInputElement;\n  const value = Number(target.value);\n  $curveFittingErrorDisplay.innerHTML = target.value;\n  curveFittingError = value;\n  onValueChanged();\n});\n\nconst $ramerDouglaspeucherErrorDisplay = document.getElementById(\n  'ramer-douglas-peucher-error'\n);\nconst $ramerDouglaspeucherError = document.getElementById(\n  'ramer-douglas-peucher-error-slider'\n) as HTMLInputElement;\n$ramerDouglaspeucherError.addEventListener('input', (e) => {\n  const target = e.target as HTMLInputElement;\n  const value = Number(target.value);\n  $ramerDouglaspeucherErrorDisplay.innerHTML = target.value;\n  ramerDouglaspeucherError = value;\n  onValueChanged();\n});\n\nconst drawer = new Drawer($svg);\n\nfunction onValueChanged(): void {\n  drawer.options = {\n    renderMode: renderMode,\n    preprocessMode: preprocessMode,\n    linearizePointDistance: linearizePointDistance,\n    curveFittingError: curveFittingError,\n    colorize: colorize,\n  };\n}\n"],"names":[],"sourceRoot":""}